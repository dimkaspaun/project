# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {

  :router => {
    :box_name => "centos/7",
    :memory => 512,
    :cpus => 1,
    :ip_addr => '192.168.10.10',
    :disks => {},
  }, 

  :backup => {
    :box_name => "centos/7",
    :memory => 512,
    :cpus => 1,
    :ip_addr => '192.168.10.90',    
    :disks => {},
  },

  :elk => {
    :box_name => "centos/7",
    :cpus => 4,
    :memory => 4096,
    :ip_addr => '192.168.10.40',    
    :disks => {},
  }, 

  :storage => {
    :box_name => "centos/7",
    :memory => 512,
    :cpus => 1,
    :ip_addr => '192.168.10.100',
    :disks => {
        :sata1 => {
            :dfile =>  home + '/VirtualBox VMs/sata1.vdi',
            :size => 3072, # Megabytes
            :port => 1
        },
        :sata2 => {
            :dfile => home + '/VirtualBox VMs/sata2.vdi',
            :size => 3072, # Megabytes
            :port => 2
        },
    },
  },
  
  :mysqlmaster => {
    :box_name => "centos/7",
    :memory => 512,
    :cpus => 1,
    :ip_addr => '192.168.10.30',    
    :disks => {},
  },  

  :mysqlslave => {
    :box_name => "centos/7",
    :memory => 512,
    :cpus => 1,
    :ip_addr => '192.168.10.35',    
    :disks => {},
  },  

  :nginx => {
    :box_name => "centos/7",
    :memory => 512,
    :cpus => 1,
    :ip_addr => '192.168.10.20',    
    :disks => {},
  }, 

  :zabbix => {
    :box_name => "centos/7",
    :memory => 512,
    :cpus => 1,
    :ip_addr => '192.168.10.50',    
    :disks => {},
  }, 
}

Vagrant.configure("2") do |config|

    MACHINES.each do |boxname, boxconfig|
  
        config.vm.define boxname do |box|
  
            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s

  
            box.vm.network "private_network", ip: boxconfig[:ip_addr]#, auto_config: false

            box.vm.provider :virtualbox do |vb|
                vb.name = boxname.to_s
                vb.memory = boxconfig[:memory]
                vb.cpus = boxconfig[:cpus] 
                needsController = false
            boxconfig[:disks].each do |dname, dconf|
                unless File.exist?(dconf[:dfile])
                vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                needsController =  true
            end
            end
                if needsController == true
                    vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                    boxconfig[:disks].each do |dname, dconf|
                    vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                    end
                end
        end
    
        box.vm.provision "ansible" do |ansible|
          ansible.compatibility_mode = "2.0"
          #ansible.verbose = "vvv"
          ansible.playbook = "provision/playbook.yml"
          ansible.become = "true"
        end
  
        box.vm.provision "shell", inline: <<-SHELL
            mkdir -p ~root/.ssh
            cp ~vagrant/.ssh/auth* ~root/.ssh
            SHELL
 
    end
end
end